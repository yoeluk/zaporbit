securesocial {
	#
	# Where to redirect the user if SecureSocial can't figure that out from
	# the request that was received before authenticating the user
	#
	onLoginGoTo=/

	#
	# Where to redirect the user when he logs out. If not set SecureSocial will redirect to the login page
	#
	onLogoutGoTo=/login

	#
	# Enable SSL
	#
	#ssl=true
  ssl=false

	#
	# The controller class for assets. This is optional, only required
	# when you use a custom class for Assets.
	#
	# assetsController=controllers.ReverseMyCustomAssetsController

	 cookie {
            #name=id
            #path=/
            #domain=some_domain
            #httpOnly=true
            #idleTimeoutInMinutes=30
            #absoluteTimeoutInMinutes=720
    }

    #twitter {
    #	requestTokenUrl="https://twitter.com/oauth/request_token"
    #	accessTokenUrl="https://twitter.com/oauth/access_token"
    #	authorizationUrl="https://twitter.com/oauth/authenticate"
    #	consumerKey=your_consumer_key
    #	consumerSecret=your_consumer_secret
    #}


    facebook {
    	authorizationUrl="https://graph.facebook.com/oauth/authorize"
    	accessTokenUrl="https://graph.facebook.com/oauth/access_token"
    	#clientId=707572852626545
    	#clientSecret=2d638c72f8b069a95156db63630f7b94

      ### THESE ARE TEST SETTINGS ONLY - NEED TO CHANGE FOR PRODUCTION TO THE ABOVE VALUES !!!
      clientId=754890951228068
      clientSecret=4fa46d00284ec949589ec918142aff35

    	# this scope is the minimum SecureSocial requires.  You can add more if required by your app.
    	scope=email
    }

    #google {
    #	authorizationUrl="https://accounts.google.com/o/oauth2/auth"
    #	accessTokenUrl="https://accounts.google.com/o/oauth2/token"
    #	clientId=your_client_id
    #	clientSecret=your_client_secret
    #	scope="https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email"
    #}

    customCssPath=stylesheets/main.css
    faviconPath=images/favicon.png

}

